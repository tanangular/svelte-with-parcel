"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.configure = configure;
exports.register = register;
exports.reload = reload;

var _svelteDevHelper = require("svelte-dev-helper");

let hotOptions = {
  noPreserveState: false
};

function configure(options) {
  hotOptions = Object.assign(hotOptions, options);
  (0, _svelteDevHelper.configure)(hotOptions);
}

function register(id, component) {
  // Store original component in registry
  _svelteDevHelper.Registry.set(id, {
    rollback: null,
    component,
    instances: []
  }); // Create the proxy itself


  const proxy = (0, _svelteDevHelper.createProxy)(id); // Patch the registry record with proxy constructor

  const record = _svelteDevHelper.Registry.get(id);

  record.proxy = proxy;

  _svelteDevHelper.Registry.set(id, record);

  return proxy;
}

function reload(id, component) {
  const record = _svelteDevHelper.Registry.get(id); // Keep reference to previous version to enable rollback


  record.rollback = record.component; // Replace component in registry with newly loaded component

  record.component = component;

  _svelteDevHelper.Registry.set(id, record); // Re-render the proxy instances


  record.instances.slice().forEach(instance => instance && instance._rerender()); // Return the original proxy constructor that was `register()`-ed

  return record.proxy;
}